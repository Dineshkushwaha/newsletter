<?php

/**
 * @file
 * {@inheritdoc}
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\sph_newsletter\Controller\PreviewNewsletterController;

/**
 * Implements hook_form_alter().
 */
function sph_newsletter_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  switch ($form_id) {
    case 'node_newsletter_edit_form':
      $form['actions']['launch'] = [
        '#name' => 'launch',
        '#type' => 'submit',
        '#weight' => 999,
        '#limit_validation_errors' => [],
        '#button_type' => 'submit',
        '#submit' => [
          'sph_newsletter_node_form_submit',
        ],
        '#value' => t('Launch'),
        '#attributes' => ['onclick' => 'if(!confirm("Do you really want to launch?")){return false;}'],
      ];
      $form['actions']['preview_email'] = [
          '#name' => 'preview_email',
          '#type' => 'submit',
          '#weight' => 999,
          '#limit_validation_errors' => [],
          '#button_type' => 'submit',
          '#submit' => [
              'sph_newsletter_node_form_submit',
          ],
          '#value' => t('Preview Email'),
      ];
      break;
  }
}

/**
 * {@inheritDoc}
 */
function sph_newsletter_node_form_submit(&$form, FormStateInterface $form_state) {

  $nid = $form_state->getFormObject()->getEntity()->id();
  $actions = $form_state->getTriggeringElement()['#name'];
  $emarsysValues = get_emarsys_data($nid, $actions);
  $emarsysValues['action'] = $actions;

  $service = \Drupal::service('sph_newsletter.emarsys_services');
  $service->previewNewsletter($emarsysValues);
}

/**
 * {@inheritDoc}
 */
function get_emarsys_data($nid, $action) {

  $build = new PreviewNewsletterController;
  $newsletter_html = $build->getHTML($nid);
  $node = $newsletter_html['node'];

  $newsLetterValues = [
    'name' => ($node->hasField('field_name')) ? $node->field_name->value . "-" . date('Y-m-d h:i:s') : '',
    'subject' => ($node->hasField('field_subject')) ? $node->field_subject->value : '',
    'language' => ($node->hasField('field_language')) ? $node->field_language->value : '',
    'fromemail' => ($node->hasField('field_from_email')) ? $node->field_from_email->value : '',
    'fromname' => ($node->hasField('field_from_name')) ? $node->field_from_name->value : '',
    'html_source' => $newsletter_html['newsletter_data'],
    'unsubscribe' => 1,
    'filter' => ($action == 'launch' && ($node->hasField('field_preview_segment_id') || $node->hasField('field_production_segment_id'))) ? $node->field_production_segment_id->value : $node->field_preview_segment_id->value,
  ];
  return $newsLetterValues;
}

function sph_newsletter_theme($existing, $type, $theme, $path) {
  return [
    'newsletter__preview' => [
      'variables' => [
        'result' => NULL,
      ],
    ],
  ];
}

